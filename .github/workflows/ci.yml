name: Docker Image CICD
run-name: "${{ github.event.head_commit.message }} (${{ github.sha }})"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  docker-build:

    runs-on: ubuntu-latest

    steps:
    - name: Print working directory
      run: pwd

    - uses: actions/checkout@v4
    - name: Build the Docker image
      run: docker compose up --detach --wait --wait-timeout 30

    - name: Show container status
      run: docker ps 

    - name: Tailscale connection
      uses: tailscale/github-action@v2
      with:
        oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
        oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
        tags: tag:cicd-pipeline

    - name: SSH setup
      run: |
        mkdir -p ~/.ssh/
        echo "$SSH_FINGERPRINT" > ~/.ssh/known_hosts
        echo "$SSH_KEY" > ~/.ssh/srv.key
        chmod 600 ~/.ssh/srv.key
        cat >>~/.ssh/config <<END
        Host srv
          HostName $SSH_HOST
          User $SSH_USER
          IdentityFile ~/.ssh/srv.key
          StrictHostKeyChecking yes
        END
      env:
        SSH_USER: ${{ secrets.TARGET_SERVER_USERNAME }}
        SSH_KEY: ${{ secrets.SSH_PRIV_KEY }}
        SSH_HOST: ${{ secrets.TS_TARGET_SERVER }}
        SSH_FINGERPRINT: ${{ secrets.SSH_FINGERPRINT }}

    - name: Bring down Traefik container on server
      run: ssh srv 'cd ${{ github.event.repository.name }} && docker compose down'

    - name: Preserve certificate data
      run: |
        ssh srv 'mkdir -p letsencrypt'
        ssh srv '[ -f ${{ github.event.repository.name }}/volumes/traefik/letsencrypt/acme.json ] && cp ${{ github.event.repository.name }}/volumes/traefik/letsencrypt/acme.json letsencrypt/acme.json'
        ssh srv '[ ! -f letsencrypt/acme.json ] && echo "{}" > letsencrypt/acme.json'

    - name: Delete directory on server
      run: |
        ssh srv 'ls ${{ github.event.repository.name }}'

    - name: Deploy files
      run: |
        rsync -avh --exclude=".[!.]*" * srv:/root/${{ github.event.repository.name }}

    - name: Restore certificate data
      run: |
        ssh srv 'cp letsencrypt/acme.json ${{ github.event.repository.name }}/volumes/traefik/letsencrypt/acme.json'

    - name: Bring up Traefik container on server
      if: ${{ always() }}
      run: |
        ssh srv 'cd ${{ github.event.repository.name }} && docker compose up -d'